!function(window){"use strict";function isValidJson(json){try{var o=window.JSON.parse(window.JSON.stringify(window.JSON.parse(json)));if(o&&"object"==typeof o&&null!==o)return!0}catch(e){return!1}return!1}function debug(message){enplug.debug&&(arguments[0]=tag+arguments[0],console.log.apply(console,arguments))}function validateCallbacks(options){if(options.successCallback&&"function"!=typeof options.successCallback)throw new Error(tag+"Success callback must be a function.");if(options.successCallback=options.successCallback||enplug.noop,options.errorCallback&&"function"!=typeof options.errorCallback)throw new Error(tag+"Error callback must be a function.");options.errorCallback=options.errorCallback||enplug.noop}var enplug=window.enplug||(window.enplug={debug:!1,classes:{},noop:function(){}}),targetOrigin="*",tag="[Enplug SDK] ";enplug.classes.Transport=function(window,namespace){function parseResponse(event){if(isValidJson(event.data)){var response=window.JSON.parse(event.data);return response.namespace===namespace&&"boolean"==typeof response.success?response:(response.namespace||debug("Did not recognize window message response format:",event),!1)}return debug("Did not recognize non-JSON window message:",event),!1}this.callId=0,this.pendingCalls={},this.tag=tag,this.send=function(options){if(options.name){options.callId=++this.callId,options.namespace=namespace,options["transient"]=!!options["transient"],options.persistent=!!options.persistent,validateCallbacks(options),debug("Calling method:",options),options["transient"]||(this.pendingCalls[options.callId]=options);try{var json=JSON.stringify(options);window.parent.postMessage(json,targetOrigin)}catch(e){console.error(tag+"Error:",e)}return options.callId}throw new Error(tag+"All transport method calls must have a name.")},this.receive=function(event){var response=parseResponse(event);if(response){var methodCall=this.pendingCalls[response.callId];if(methodCall){methodCall.persistent||delete this.pendingCalls[response.callId],debug("Calling method "+(response.success?"success":"error")+" callback:",{call:methodCall,response:response});var cb=response.success?methodCall.successCallback:methodCall.errorCallback;return cb(response.data),!0}}return!1},window.addEventListener("message",this.receive,!1)}}(window),function(window,enplug){"use strict";function Sender(prefix){this.prefix=prefix,this.novalidate=!1,this.transport=new enplug.classes.Transport(window,prefix)}Sender.prototype={validate:function(data,expectedType,errorMessage){if(!this.novalidate&&(!data||typeof data!==expectedType||"array"===expectedType&&!Array.isArray(data)))throw new Error(errorMessage)},method:function(options){if("object"==typeof options)return options.name=this.prefix+"."+options.name,this.transport.send(options);throw new Error("")}},enplug.classes.Sender=Sender}(window,window.enplug),function(enplug){"use strict";function AccountSender(){enplug.classes.Sender.call(this,methodPrefix),this.getAccount=function(onSuccess,onError){return this.method({name:"getAccount",successCallback:onSuccess,errorCallback:onError})},this.getDisplayGroup=function(onSuccess,onError){return this.method({name:"getDisplay",successCallback:onSuccess,errorCallback:onError})},this.getInstances=function(accountId,onSuccess,onError){return this.validate(accountId,"string",""),this.method({name:"getInstances",params:accountId,successCallback:onSuccess,errorCallback:onError})},this.getAssets=function(onSuccess,onError){return this.method({name:"getAssets",successCallback:onSuccess,errorCallback:onError})},this.getDefaultAssets=function(onSuccess,onError){return this.method({name:"getDefaultAssets",successCallback:onSuccess,errorCallback:onError})},this.createAsset=function(name,value,onSuccess,onError){return this.validate(name,"string",""),this.validate(value,"object",""),this.method({name:"createAsset",params:[name,value],successCallback:onSuccess,errorCallback:onError})},this.createAssetFromDefault=function(defaultAssetId,onSuccess,onError){return this.validate(defaultAssetId,"string",""),this.method({name:"createAssetFromDefault",params:defaultAssetId,successCallback:onSuccess,errorCallback:onError})},this.updateAsset=function(id,value,onSuccess,onError){return this.validate(id,"string",""),this.validate(value,"object",""),this.method({name:"updateAsset",params:[id,value],successCallback:onSuccess,errorCallback:onError})},this.bulkCreateAssets=function(assets,onSuccess,onError){return this.validate(assets,"array",""),this.method({name:"bulkCreateAssets",params:assets,successCallback:onSuccess,errorCallback:onError})},this.bulkUpdateAssets=function(assets,onSuccess,onError){return this.validate(assets,"array",""),this.method({name:"bulkUpdateAssets",params:assets,successCallback:onSuccess,errorCallback:onError})},this.bulkRemoveAssets=function(assetIds,onSuccess,onError){return this.validate(assetIds,"array",""),this.method({name:"bulkRemoveAssets",params:assetIds,successCallback:onSuccess,errorCallback:onError})},this.removeAsset=function(id,onSuccess,onError){return this.validate(id,"string",""),this.method({name:"removeAsset",params:[id],successCallback:onSuccess,errorCallback:onError})},this.getThemes=function(onSuccess,onError){return this.method({name:"getThemes",successCallback:onSuccess,errorCallback:onError})},this.createTheme=function(newTheme,onSuccess,onError){return this.validate(newTheme,"object",""),this.method({name:"createTheme",params:newTheme,successCallback:onSuccess,errorCallback:onError})},this.removeTheme=function(themeId,onSuccess,onError){return this.validate(themeId,"string",""),this.method({name:"removeTheme",params:themeId,successCallback:onSuccess,errorCallback:onError})},this.activateTheme=function(themeId,onSuccess,onError){return this.validate(themeId,"string",""),this.method({name:"activateTheme",params:themeId,successCallback:onSuccess,errorCallback:onError})},this.getDisplay=this.getDisplayGroup}var methodPrefix="app";AccountSender.prototype=Object.create(enplug.classes.Sender.prototype),enplug.classes.AccountSender=AccountSender,enplug.account=new AccountSender}(window.enplug),function(angular,enplug){"use strict";function decorateSend(q,original){return function(options){var defer=q.defer(),onSuccess=options.successCallback,onError=options.errorCallback;return options.successCallback=function(result){defer.resolve(result),onSuccess(result)},options.errorCallback=function(result){defer.reject(result),onError(result)},original.call(enplug.transport,options),defer.promise}}if(angular){var module=angular.module("enplug.sdk",[]);module.factory("$enplugDashboard",function($q){var sender=new enplug.classes.DashboardSender;return sender.transport.send=decorateSend($q,sender.transport.send),sender}),module.factory("$enplugAccount",function($q){var sender=new enplug.classes.AccountSender;return sender.transport.send=decorateSend($q,sender.transport.send),sender})}}(window.angular,window.enplug),function(enplug,document){"use strict";function DashboardSender(){var currentButtons=[],isLoading=!0;enplug.classes.Sender.call(this,methodPrefix),this.click=function(){return this.method({name:"click","transient":!0})},this.setHeaderTitle=function(title,onSuccess,onError){return this.validate(title,"string",""),this.method({name:"set.title",params:title,successCallback:onSuccess,errorCallback:onError})},this.setHeaderButtons=function(buttons,onSuccess,onError){return this.validate(buttons,"object",""),currentButtons=[],buttons=Array.isArray(buttons)?buttons:[buttons],buttons.forEach(function(button){button.id="button-"+Math.round(9999*Math.random()+1),currentButtons[button.id]=button}),this.method({name:"set.buttons",params:buttons,persistent:!0,successCallback:function(clicked){if(clicked){var button=currentButtons[clicked.id];button.action()}"function"==typeof onSuccess&&onSuccess(clicked)},errorCallback:onError})},this.pageLoading=function(bool,onSuccess,onError){return this.validate(bool,"boolean",""),this.method({name:"page.loading",params:bool,successCallback:function(data){isLoading=bool,"function"==typeof onSuccess&&onSuccess(data)},errorCallback:onError})},this.isLoading=function(){return isLoading},this.pageError=function(onSuccess,onError){return this.method({name:"page.error",successCallback:onSuccess,errorCallback:onError})},this.pageNotFound=function(onSuccess,onError){return this.method({name:"page.notFound",successCallback:onSuccess,errorCallback:onError})},this.loadingIndicator=function(message,onSuccess,onError){return this.validate(message,"object",""),this.method({name:"indicator.loading",params:message,successCallback:onSuccess,errorCallback:onError})},this.successIndicator=function(message,onSuccess,onError){return this.validate(message,"string",""),this.method({name:"indicator.success",params:message,successCallback:onSuccess,errorCallback:onError})},this.errorIndicator=function(message,onSuccess,onError){return this.validate(message,"string",""),this.method({name:"indicator.error",params:message,successCallback:onSuccess,errorCallback:onError})},this.openConfirm=function(options,onSuccess,onError){return this.validate(options,"object",""),this.method({name:"confirm",params:options,successCallback:onSuccess,errorCallback:onError})},this.confirmUnsavedChanges=function(onSuccess,onError){return this.method({name:"unsavedChanges",successCallback:onSuccess,errorCallback:onError})},this.upload=function(options,onSuccess,onError){return this.method({name:"upload",params:options,successCallback:onSuccess,errorCallback:onError})}}var methodPrefix="dashboard";DashboardSender.prototype=Object.create(enplug.classes.Sender.prototype),enplug.classes.DashboardSender=DashboardSender,enplug.dashboard=new DashboardSender,document.addEventListener("click",function(){return enplug.dashboard.click(),!0},!1)}(window.enplug,document);